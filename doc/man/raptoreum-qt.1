.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.11.
.TH RAPTOREUM-QT "1" "November 2019" "raptoreum-qt v0.15.0.0" "User Commands"
.SH NAME
raptoreum-qt \- manual page for raptoreum-qt v0.15.0.0
.SH DESCRIPTION
Raptoreum Core version v0.15.0.0 (64\-bit)
Usage:
.IP
raptoreum\-qt [command\-line options]
.SH OPTIONS
.HP
\-?
.IP
Print this help message and exit
.HP
\fB\-version\fR
.IP
Print version and exit
.HP
\fB\-alertnotify=\fR<cmd>
.IP
Execute command when a relevant alert is received or we see a really
long fork (%s in cmd is replaced by message)
.HP
\fB\-blocknotify=\fR<cmd>
.IP
Execute command when the best block changes (%s in cmd is replaced by
block hash)
.HP
\fB\-assumevalid=\fR<hex>
.IP
If this block is in the chain assume that it and its ancestors are valid
and potentially skip their script verification (0 to verify all,
default:
000000000000000fb7b1e9b81700283dff0f7d87cf458e5edfdae00c669de661,
testnet:
000000001015eb5ef86a8fe2b3074d947bc972c5befe32b28dd5ce915dc0d029)
.HP
\fB\-conf=\fR<file>
.IP
Specify configuration file (default: raptoreum.conf)
.HP
\fB\-datadir=\fR<dir>
.IP
Specify data directory
.HP
\fB\-dbcache=\fR<n>
.IP
Set database cache size in megabytes (4 to 16384, default: 300)
.HP
\fB\-loadblock=\fR<file>
.IP
Imports blocks from external blk000??.dat file on startup
.HP
\fB\-maxorphantxsize=\fR<n>
.IP
Maximum total size of all orphan transactions in megabytes (default: 10)
.HP
\fB\-maxmempool=\fR<n>
.IP
Keep the transaction memory pool below <n> megabytes (default: 300)
.HP
\fB\-mempoolexpiry=\fR<n>
.IP
Do not keep transactions in the mempool longer than <n> hours (default:
336)
.HP
\fB\-persistmempool\fR
.IP
Whether to save the mempool on shutdown and load on restart (default: 1)
.HP
\fB\-syncmempool\fR
.IP
Sync mempool from other nodes on start (default: 1)
.HP
\fB\-blockreconstructionextratxn=\fR<n>
.IP
Extra transactions to keep in memory for compact block reconstructions
(default: 100)
.HP
\fB\-par=\fR<n>
.IP
Set the number of script verification threads (\fB\-2\fR to 16, 0 = auto, <0 =
leave that many cores free, default: 0)
.HP
\fB\-pid=\fR<file>
.IP
Specify pid file (default: raptoreumd.pid)
.HP
\fB\-prune=\fR<n>
.IP
Reduce storage requirements by enabling pruning (deleting) of old
blocks. This allows the pruneblockchain RPC to be called to
delete specific blocks, and enables automatic pruning of old
blocks if a target size in MiB is provided. This mode is
incompatible with \fB\-txindex\fR and \fB\-rescan\fR. Warning: Reverting this
setting requires re\-downloading the entire blockchain. (default:
0 = disable pruning blocks, 1 = allow manual pruning via RPC,
>945 = automatically prune block files to stay under the
specified target size in MiB)
.HP
\fB\-reindex\-chainstate\fR
.IP
Rebuild chain state from the currently indexed blocks
.HP
\fB\-reindex\fR
.IP
Rebuild chain state and block index from the blk*.dat files on disk
.HP
\fB\-sysperms\fR
.IP
Create new files with system default permissions, instead of umask 077
(only effective with disabled wallet functionality)
.HP
\fB\-txindex\fR
.IP
Maintain a full transaction index, used by the getrawtransaction rpc
call (default: 1)
.HP
\fB\-addressindex\fR
.IP
Maintain a full address index, used to query for the balance, txids and
unspent outputs for addresses (default: 0)
.HP
\fB\-timestampindex\fR
.IP
Maintain a timestamp index for block hashes, used to query blocks hashes
by a range of timestamps (default: 0)
.HP
\fB\-spentindex\fR
.IP
Maintain a full spent index, used to query the spending txid and input
index for an outpoint (default: 0)
.PP
Connection options:
.HP
\fB\-addnode=\fR<ip>
.IP
Add a node to connect to and attempt to keep the connection open (see
the `addnode` RPC command help for more info)
.HP
\fB\-allowprivatenet\fR
.IP
Allow RFC1918 addresses to be relayed and connected to (default: 0)
.HP
\fB\-banscore=\fR<n>
.IP
Threshold for disconnecting misbehaving peers (default: 100)
.HP
\fB\-bantime=\fR<n>
.IP
Number of seconds to keep misbehaving peers from reconnecting (default:
86400)
.HP
\fB\-bind=\fR<addr>
.IP
Bind to given address and always listen on it. Use [host]:port notation
for IPv6
.HP
\fB\-connect=\fR<ip>
.IP
Connect only to the specified node(s); \fB\-connect\fR=\fI\,0\/\fR disables automatic
connections (the rules for this peer are the same as for
\fB\-addnode\fR)
.HP
\fB\-discover\fR
.IP
Discover own IP addresses (default: 1 when listening and no \fB\-externalip\fR
or \fB\-proxy\fR)
.HP
\fB\-dns\fR
.IP
Allow DNS lookups for \fB\-addnode\fR, \fB\-seednode\fR and \fB\-connect\fR (default: 1)
.HP
\fB\-dnsseed\fR
.IP
Query for peer addresses via DNS lookup, if low on addresses (default: 1
unless \fB\-connect\fR used)
.HP
\fB\-externalip=\fR<ip>
.IP
Specify your own public address
.HP
\fB\-forcednsseed\fR
.IP
Always query for peer addresses via DNS lookup (default: 0)
.HP
\fB\-listen\fR
.IP
Accept connections from outside (default: 1 if no \fB\-proxy\fR or \fB\-connect\fR)
.HP
\fB\-listenonion\fR
.IP
Automatically create Tor hidden service (default: 1)
.HP
\fB\-maxconnections=\fR<n>
.IP
Maintain at most <n> connections to peers (temporary service connections
excluded) (default: 125)
.HP
\fB\-maxreceivebuffer=\fR<n>
.IP
Maximum per\-connection receive buffer, <n>*1000 bytes (default: 5000)
.HP
\fB\-maxsendbuffer=\fR<n>
.IP
Maximum per\-connection send buffer, <n>*1000 bytes (default: 1000)
.HP
\fB\-maxtimeadjustment\fR
.IP
Maximum allowed median peer time offset adjustment. Local perspective of
time may be influenced by peers forward or backward by this
amount. (default: 4200 seconds)
.HP
\fB\-onion=\fR<ip:port>
.IP
Use separate SOCKS5 proxy to reach peers via Tor hidden services
(default: \fB\-proxy\fR)
.HP
\fB\-onlynet=\fR<net>
.IP
Only connect to nodes in network <net> (ipv4, ipv6 or onion)
.HP
\fB\-permitbaremultisig\fR
.IP
Relay non\-P2SH multisig (default: 1)
.HP
\fB\-peerbloomfilters\fR
.IP
Support filtering of blocks and transaction with bloom filters (default:
1)
.HP
\fB\-port=\fR<port>
.IP
Listen for connections on <port> (default: 9999 or testnet: 19999)
.HP
\fB\-proxy=\fR<ip:port>
.IP
Connect through SOCKS5 proxy
.HP
\fB\-proxyrandomize\fR
.IP
Randomize credentials for every proxy connection. This enables Tor
stream isolation (default: 1)
.HP
\fB\-seednode=\fR<ip>
.IP
Connect to a node to retrieve peer addresses, and disconnect
.HP
\fB\-timeout=\fR<n>
.IP
Specify connection timeout in milliseconds (minimum: 1, default: 5000)
.HP
\fB\-torcontrol=\fR<ip>:<port>
.IP
Tor control port to use if onion listening enabled (default:
127.0.0.1:9051)
.HP
\fB\-torpassword=\fR<pass>
.IP
Tor control port password (default: empty)
.HP
\fB\-upnp\fR
.IP
Use UPnP to map the listening port (default: 0)
.HP
\fB\-whitebind=\fR<addr>
.IP
Bind to given address and whitelist peers connecting to it. Use
[host]:port notation for IPv6
.HP
\fB\-whitelist=\fR<IP address or network>
.IP
Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or
CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple
times. Whitelisted peers cannot be DoS banned and their
transactions are always relayed, even if they are already in the
mempool, useful e.g. for a gateway
.HP
\fB\-maxuploadtarget=\fR<n>
.IP
Tries to keep outbound traffic under the given target (in MiB per 24h),
0 = no limit (default: 0)
.PP
Wallet options:
.HP
\fB\-disablewallet\fR
.IP
Do not load the wallet and disable wallet RPC calls
.HP
\fB\-keypool=\fR<n>
.IP
Set key pool size to <n> (default: 1000)
.HP
\fB\-fallbackfee=\fR<amt>
.IP
A fee rate (in RAPTOREUM/kB) that will be used when fee estimation has
insufficient data (default: 0.00001)
.HP
\fB\-discardfee=\fR<amt>
.IP
The fee rate (in RAPTOREUM/kB) that indicates your tolerance for discarding
change by adding it to the fee (default: 0.0001). Note: An output
is discarded if it is dust at this rate, but we will always
discard up to the dust relay fee and a discard fee above that is
limited by the fee estimate for the longest target
.HP
\fB\-mintxfee=\fR<amt>
.IP
Fees (in RAPTOREUM/kB) smaller than this are considered zero fee for
transaction creation (default: 0.00001)
.HP
\fB\-paytxfee=\fR<amt>
.IP
Fee (in RAPTOREUM/kB) to add to transactions you send (default: 0.00)
.HP
\fB\-rescan\fR
.IP
Rescan the block chain for missing wallet transactions on startup
.HP
\fB\-salvagewallet\fR
.IP
Attempt to recover private keys from a corrupt wallet on startup
.HP
\fB\-spendzeroconfchange\fR
.IP
Spend unconfirmed change when sending transactions (default: 1)
.HP
\fB\-txconfirmtarget=\fR<n>
.IP
If paytxfee is not set, include enough fee so transactions begin
confirmation on average within n blocks (default: 6)
.HP
\fB\-usehd\fR
.IP
Use hierarchical deterministic key generation (HD) after BIP39/BIP44.
Only has effect during wallet creation/first start (default: 0)
.HP
\fB\-mnemonic=\fR<text>
.IP
User defined mnemonic for HD wallet (bip39). Only has effect during
wallet creation/first start (default: randomly generated)
.HP
\fB\-mnemonicpassphrase=\fR<text>
.IP
User defined mnemonic passphrase for HD wallet (BIP39). Only has effect
during wallet creation/first start (default: empty string)
.HP
\fB\-hdseed=\fR<hex>
.IP
User defined seed for HD wallet (should be in hex). Only has effect
during wallet creation/first start (default: randomly generated)
.HP
\fB\-upgradewallet\fR
.IP
Upgrade wallet to latest format on startup
.HP
\fB\-wallet=\fR<file>
.IP
Specify wallet file (within data directory) (default: wallet.dat)
.HP
\fB\-walletbroadcast\fR
.IP
Make the wallet broadcast transactions (default: 1)
.HP
\fB\-walletnotify=\fR<cmd>
.IP
Execute command when a wallet transaction changes (%s in cmd is replaced
by TxID)
.HP
\fB\-zapwallettxes=\fR<mode>
.IP
Delete all wallet transactions and only recover those parts of the
blockchain through \fB\-rescan\fR on startup (1 = keep tx meta data e.g.
account owner and payment request information, 2 = drop tx meta
data)
.HP
\fB\-createwalletbackups=\fR<n>
.IP
Number of automatic wallet backups (default: 10)
.HP
\fB\-walletbackupsdir=\fR<dir>
.IP
Specify full path to directory for automatic wallet backups (must exist)
.HP
\fB\-keepass\fR
.IP
Use KeePass 2 integration using KeePassHttp plugin (default: 0)
.HP
\fB\-keepassport=\fR<port>
.IP
Connect to KeePassHttp on port <port> (default: 19455)
.HP
\fB\-keepasskey=\fR<key>
.IP
KeePassHttp key for AES encrypted communication with KeePass
.HP
\fB\-keepassid=\fR<id>
.IP
KeePassHttp id for the established association
.HP
\fB\-keepassname=\fR<name>
.IP
Name to construct url for KeePass entry that stores the wallet
passphrase
.HP
\fB\-windowtitle=\fR<name>
.IP
Wallet window title
.PP
ZeroMQ notification options:
.HP
\fB\-zmqpubhashblock=\fR<address>
.IP
Enable publish hash block in <address>
.HP
\fB\-zmqpubhashtx=\fR<address>
.IP
Enable publish hash transaction in <address>
.HP
\fB\-zmqpubhashtxlock=\fR<address>
.IP
Enable publish hash transaction (locked via InstantSend) in <address>
.HP
\fB\-zmqpubhashgovernancevote=\fR<address>
.IP
Enable publish hash of governance votes in <address>
.HP
\fB\-zmqpubhashgovernanceobject=\fR<address>
.IP
Enable publish hash of governance objects (like proposals) in <address>
.HP
\fB\-zmqpubhashinstantsenddoublespend=\fR<address>
.IP
Enable publish transaction hashes of attempted InstantSend double spend
in <address>
.HP
\fB\-zmqpubrawblock=\fR<address>
.IP
Enable publish raw block in <address>
.HP
\fB\-zmqpubrawtx=\fR<address>
.IP
Enable publish raw transaction in <address>
.HP
\fB\-zmqpubrawtxlock=\fR<address>
.IP
Enable publish raw transaction (locked via InstantSend) in <address>
.HP
\fB\-zmqpubrawinstantsenddoublespend=\fR<address>
.IP
Enable publish raw transactions of attempted InstantSend double spend in
<address>
.PP
Debugging/Testing options:
.HP
\fB\-uacomment=\fR<cmt>
.IP
Append comment to the user agent string
.HP
\fB\-debug=\fR<category>
.IP
Output debugging information (default: 0, supplying <category> is
optional). If <category> is not supplied or if <category> = 1,
output all debugging information. <category> can be: net, tor,
mempool, http, bench, zmq, db, rpc, estimatefee, addrman,
selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,
libevent, coindb, qt, leveldb, chainlocks, gobject, instantsend,
keepass, llmq, llmq\-dkg, llmq\-sigs, mnpayments, mnsync,
privatesend, spork.
.HP
\fB\-debugexclude=\fR<category>
.IP
Exclude debugging information for a category. Can be used in conjunction
with \fB\-debug\fR=\fI\,1\/\fR to output debug logs for all categories except one
or more specified categories.
.HP
\fB\-help\-debug\fR
.IP
Show all debugging options (usage: \fB\-\-help\fR \fB\-help\-debug\fR)
.HP
\fB\-logips\fR
.IP
Include IP addresses in debug output (default: 0)
.HP
\fB\-logtimestamps\fR
.IP
Prepend debug output with timestamp (default: 1)
.HP
\fB\-maxtxfee=\fR<amt>
.IP
Maximum total fees (in RAPTOREUM) to use in a single wallet transaction or
raw transaction; setting this too low may abort large
transactions (default: 0.10)
.HP
\fB\-printtoconsole\fR
.IP
Send trace/debug info to console instead of debug.log file
.HP
\fB\-printtodebuglog\fR
.IP
Send trace/debug info to debug.log file (default: 1)
.HP
\fB\-shrinkdebugfile\fR
.IP
Shrink debug.log file on client startup (default: 1 when no \fB\-debug\fR)
.PP
Chain selection options:
.HP
\fB\-testnet\fR
.IP
Use the test chain
.HP
\fB\-devnet=\fR<name>
.IP
Use devnet chain with provided name
.HP
\fB\-litemode\fR
.IP
Disable all Raptoreum specific functionality (Masternodes, PrivateSend,
InstantSend, Governance) (0\-1, default: 0)
.HP
\fB\-sporkaddr=\fR<raptoreumaddress>
.IP
Override spork address. Only useful for regtest and devnet. Using this
on mainnet or testnet will ban you.
.HP
\fB\-minsporkkeys=\fR<n>
.IP
Overrides minimum spork signers to change spork value. Only useful for
regtest and devnet. Using this on mainnet or testnet will ban
you.
.PP
Masternode options:
.HP
\fB\-smartnodeblsprivkey=\fR<hex>
.IP
Set the smartnode BLS private key and enable the client to act as a
smartnode
.PP
PrivateSend options:
.HP
\fB\-enableprivatesend\fR
.IP
Enable use of PrivateSend for funds stored in this wallet (0\-1, default:
0)
.HP
\fB\-privatesendautostart\fR
.IP
Start PrivateSend automatically (0\-1, default: 0)
.HP
\fB\-privatesendmultisession\fR
.IP
Enable multiple PrivateSend mixing sessions per block, experimental
(0\-1, default: 0)
.HP
\fB\-privatesendsessions=\fR<n>
.IP
Use N separate smartnodes in parallel to mix funds (1\-10, default: 4)
.HP
\fB\-privatesendrounds=\fR<n>
.IP
Use N separate smartnodes for each denominated input to mix funds
(2\-16, default: 4)
.HP
\fB\-privatesendamount=\fR<n>
.IP
Target PrivateSend balance (2\-21000000, default: 1000)
.HP
\fB\-privatesenddenoms=\fR<n>
.IP
Create up to N inputs of each denominated amount (10\-100000, default:
300)
.PP
InstantSend options:
.HP
\fB\-instantsendnotify=\fR<cmd>
.IP
Execute command when a wallet InstantSend transaction is successfully
locked (%s in cmd is replaced by TxID)
.PP
Node relay options:
.HP
\fB\-bytespersigop\fR
.IP
Minimum bytes per sigop in transactions we relay and mine (default: 20)
.HP
\fB\-datacarrier\fR
.IP
Relay and mine data carrier transactions (default: 1)
.HP
\fB\-datacarriersize\fR
.IP
Maximum size of data in data carrier transactions we relay and mine
(default: 83)
.HP
\fB\-minrelaytxfee=\fR<amt>
.IP
Fees (in RAPTOREUM/kB) smaller than this are considered zero fee for
relaying, mining and transaction creation (default: 0.00001)
.HP
\fB\-whitelistrelay\fR
.IP
Accept relayed transactions received from whitelisted peers even when
not relaying transactions (default: 1)
.HP
\fB\-whitelistforcerelay\fR
.IP
Force relay of transactions from whitelisted peers even if they violate
local relay policy (default: 1)
.PP
Block creation options:
.HP
\fB\-blockmaxsize=\fR<n>
.IP
Set maximum block size in bytes (default: 2000000)
.HP
\fB\-blockmintxfee=\fR<amt>
.IP
Set lowest fee rate (in RAPTOREUM/kB) for transactions to be included in
block creation. (default: 0.00001)
.PP
RPC server options:
.HP
\fB\-server\fR
.IP
Accept command line and JSON\-RPC commands
.HP
\fB\-rest\fR
.IP
Accept public REST requests (default: 0)
.HP
\fB\-rpcbind=\fR<addr>[:port]
.IP
Bind to given address to listen for JSON\-RPC connections. This option is
ignored unless \fB\-rpcallowip\fR is also passed. Port is optional and
overrides \fB\-rpcport\fR. Use [host]:port notation for IPv6. This
option can be specified multiple times (default: 127.0.0.1 and
::1 i.e., localhost, or if \fB\-rpcallowip\fR has been specified,
0.0.0.0 and :: i.e., all addresses)
.HP
\fB\-rpccookiefile=\fR<loc>
.IP
Location of the auth cookie (default: data dir)
.HP
\fB\-rpcuser=\fR<user>
.IP
Username for JSON\-RPC connections
.HP
\fB\-rpcpassword=\fR<pw>
.IP
Password for JSON\-RPC connections
.HP
\fB\-rpcauth=\fR<userpw>
.IP
Username and hashed password for JSON\-RPC connections. The field
<userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A
canonical python script is included in share/rpcuser. The client
then connects normally using the
rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This
option can be specified multiple times
.HP
\fB\-rpcport=\fR<port>
.IP
Listen for JSON\-RPC connections on <port> (default: 9998 or testnet:
19998)
.HP
\fB\-rpcallowip=\fR<ip>
.IP
Allow JSON\-RPC connections from specified source. Valid for <ip> are a
single IP (e.g. 1.2.3.4), a network/netmask (e.g.
1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This
option can be specified multiple times
.HP
\fB\-rpcthreads=\fR<n>
.IP
Set the number of threads to service RPC calls (default: 4)
.PP
UI Options:
.HP
\fB\-choosedatadir\fR
.IP
Choose data directory on startup (default: 0)
.HP
\fB\-lang=\fR<lang>
.IP
Set language, for example "de_DE" (default: system locale)
.HP
\fB\-min\fR
.IP
Start minimized
.HP
\fB\-rootcertificates=\fR<file>
.IP
Set SSL root certificates for payment request (default: \fB\-system\-\fR)
.HP
\fB\-splash\fR
.IP
Show splash screen on startup (default: 1)
.HP
\fB\-resetguisettings\fR
.IP
Reset all settings changed in the GUI
.SH COPYRIGHT
Copyright (C) 2020-2022 The Raptoreum Core developers
Copyright (C) 2014-2020 The Dash Core developers
Copyright (C) 2009-2020 The Bitcoin Core developers

Please contribute if you find Raptoreum Core useful. Visit <https://raptoreum.com> for
further information about the software.
The source code is available from <https://github.com/Raptor3um/raptoreum>.

This is experimental software.
Distributed under the MIT software license, see the accompanying file COPYING
or <https://opensource.org/licenses/MIT>

This product includes software developed by the OpenSSL Project for use in the
OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by
Eric Young and UPnP software written by Thomas Bernard.
